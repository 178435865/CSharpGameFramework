//----------------------------------------------------------------------------
//！！！不要手动修改此文件，此文件由LogicDataGenerator按ProtoFiles/LobbyMsg.dsl生成！！！
//----------------------------------------------------------------------------
package GameFrameworkMessage;

enum LobbyArgType
{
	NULL = 0;
	INT = 1;
	FLOAT = 2;
	STRING = 3;
}

message AccountLogin
{
	required string m_AccountId = 1;
	required string m_Password = 2;
	required string m_ClientInfo = 3;
}

message AccountLoginResult
{

	enum AccountLoginResultEnum
	{
		Success = 0;
		FirstLogin = 1;
		Error = 2;
		Wait = 3;
		Banned = 4;
		AlreadyOnline = 5;
		Queueing = 6;
		QueueFull = 7;
		Failed = 8;
		Nonactivated = 9;
	}
	required string m_AccountId = 1;
	required AccountLoginResultEnum m_Result = 2;
	required uint64 m_UserGuid = 3;
}

message AccountLogout
{
}

message ChangeName
{
	required string m_Nickname = 1;
}

message ChangeNameResult
{

	enum ChangeNameResultEnum
	{
		Success = 0;
		NicknameError = 1;
		UnknownError = 2;
	}
	required ChangeNameResultEnum m_Result = 1;
	required string m_Nickname = 2;
}

message ChangeSceneRoom
{
	optional int32 m_SceneId = 1;
	optional int32 m_RoomId = 2;
}

message DirectLogin
{
}

message EnterScene
{
	required int32 m_SceneId = 1;
	optional int32 m_RoomId = 2;
}

message EnterSceneResult
{
	required int32 result = 1;
	optional string server_ip = 2;
	optional uint32 server_port = 3;
	optional uint32 key = 4;
	optional int32 camp_id = 5;
	optional int32 scene_type = 6;
	optional int32 prime = 7;
}

message FriendInfoForMessage
{
	required uint64 FriendGuid = 1;
	required string FriendNickname = 2;
	required int64 QQ = 3;
	required int64 weixin = 4;
	required bool IsBlack = 5;
}

message GetQueueingCount
{
}

message GmCode
{
	required string m_Content = 1;
}

message ItemInfoForMessage
{
	required uint64 ItemGuid = 1;
	required int32 ItemId = 2;
	required int32 ItemNum = 3;
}

message KickUser
{
}

message Logout
{
}

message MailInfoForMessage
{
	required bool m_AlreadyRead = 1;
	required uint64 m_MailGuid = 2;
	required int32 m_Module = 3;
	required string m_Title = 4;
	required string m_Sender = 5;
	required string m_SendTime = 6;
	required string m_Text = 7;
	repeated MailItemForMessage m_Items = 8;
	required int32 m_Money = 9;
	required int32 m_Gold = 10;
}

message MailItemForMessage
{
	required int32 m_ItemId = 1;
	required int32 m_ItemNum = 2;
}

message MemberInfoForMessage
{
	required int32 Hero = 1;
	required int32 Level = 2;
}

message Msg_CL_AddFriend
{
	required string m_FriendNickname = 1;
}

message Msg_CL_DeleteMail
{
	required uint64 m_MailGuid = 1;
}

message Msg_CL_DiscardItem
{
	required uint64 ItemGuid = 1;
}

message Msg_CL_GetMailList
{
}

message Msg_CL_MarkBlack
{
	required uint64 m_FriendGuid = 1;
}

message Msg_CL_ReadMail
{
	required uint64 m_MailGuid = 1;
}

message Msg_CL_ReceiveMail
{
	required uint64 m_MailGuid = 1;
}

message Msg_CL_RemoveFriend
{
	required uint64 m_FriendGuid = 1;
}

message Msg_CL_UseItem
{
	required int32 ItemId = 1;
	required int32 ItemNum = 2;
}

message Msg_CLC_StoryMessage
{

	message MessageArg
	{
		required LobbyArgType val_type = 1;
		required string str_val = 2;
	}
	required string m_MsgId = 1;
	repeated MessageArg m_Args = 2;
}

message Msg_LC_AddFriend
{
	required FriendInfoForMessage m_FriendInfo = 1;
}

message Msg_LC_HighlightPrompt
{
	required string dict_id = 1;
	repeated string argument = 2;
}

message Msg_LC_LackOfSpace
{
	required bool m_Succeed = 1;
	required int32 m_ReceiveNum = 2;
	required int32 m_FreeNum = 3;
	required uint64 m_MailGuid = 4;
}

message Msg_LC_MarkBlack
{
	required uint64 m_FriendGuid = 1;
}

message Msg_LC_NotifyNewMail
{
}

message Msg_LC_PublishEvent
{

	message EventArg
	{
		required LobbyArgType val_type = 1;
		required string str_val = 2;
	}
	required bool is_logic_event = 1;
	required string ev_name = 2;
	required string group = 3;
	repeated EventArg args = 4;
}

message Msg_LC_RemoveFriend
{
	required uint64 m_FriendGuid = 1;
}

message Msg_LC_SendGfxMessage
{

	message EventArg
	{
		required LobbyArgType val_type = 1;
		required string str_val = 2;
	}
	required bool is_with_tag = 1;
	required string name = 2;
	required string msg = 3;
	repeated EventArg args = 4;
}

message Msg_LC_SyncFriendList
{
	repeated FriendInfoForMessage m_Friends = 1;
}

message Msg_LC_SyncItemList
{
	repeated ItemInfoForMessage m_Items = 1;
}

message Msg_LC_SyncMailList
{
	repeated MailInfoForMessage m_Mails = 1;
}

message Msg_LC_SyncMemberList
{
	repeated MemberInfoForMessage m_Members = 1;
}

message Msg_LC_SyncRoleInfo
{
	required int32 HeroId = 1;
	required int32 Money = 2;
	required int32 Gold = 3;
	required int32 Level = 4;
	required int32 SummonerSkillId = 5;
}

message NodeMessageWithAccount
{
	required string m_Account = 1;
}

message NodeMessageWithAccountAndGuid
{
	required string m_Account = 1;
	required uint64 m_Guid = 2;
}

message NodeMessageWithGuid
{
	required uint64 m_Guid = 1;
}

message NodeRegister
{
	required string m_Name = 1;
}

message NodeRegisterResult
{
	required bool m_IsOk = 1;
}

message QueueingCountResult
{
	required int32 m_QueueingCount = 1;
}

message QuitRoom
{
	required bool m_IsQuitRoom = 1;
}

message RequestNickname
{
}

message RequestNicknameResult
{
	repeated string m_Nicknames = 1;
}

message RequestSceneRoomInfo
{
}

message RequestSceneRoomList
{
}

message RoleEnter
{
	optional string m_Nickname = 1;
}

message RoleEnterResult
{

	enum RoleEnterResultEnum
	{
		Success = 0;
		Wait = 1;
		Reconnect = 2;
		UnknownError = 3;
	}
	required RoleEnterResultEnum Result = 1;
	required string Nickname = 2;
	required int32 HeroId = 3;
	required int32 Money = 4;
	required int32 Gold = 5;
	required int32 Level = 6;
	required int32 SceneId = 7;
	required int32 WorldId = 8;
	repeated MemberInfoForMessage Members = 9;
	repeated ItemInfoForMessage Items = 10;
	repeated FriendInfoForMessage Friends = 11;
	required int32 SummonerSkillId = 12;
}

message ServerShutdown
{
}

message TooManyOperations
{
}

message UserHeartbeat
{
}

message VersionVerify
{
}

message VersionVerifyResult
{
	required int32 m_Result = 1;
	required int32 m_EnableLog = 2;
	required uint32 m_ShopMask = 3;
}
